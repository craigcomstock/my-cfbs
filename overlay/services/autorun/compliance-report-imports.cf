bundle agent compliance_report_imports
{
  meta:
    am_policy_hub.enterprise_edition::
      "tags" slist => { "autorun" };

  vars:

    am_policy_hub.enterprise_edition::

      # Define default directories from which we should import compliance reports if not defined
      # https://tracker.mender.io/browse/ENT-8079?focusedCommentId=120476&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-120476

      "_import_dirs"
        slist => { "$(sys.workdir)/imports/compliance-reports" }, # Better var?
        if => not( isvariable( "$(this.promiser)" ) );

      "_import_files[$(_import_dirs)]"
        slist => lsdir( "$(_import_dirs)", "^(?!(\.$|\.\.$)).*", true ),
        if => isdir( $(_import_dirs) );

      "_all_import_files" slist => getvalues( _import_files );

      "_stuff" data => readenvfile( "/var/cfengine/httpd/secrets.ini");


  files:
      "$(sys.workdir)/imports/compliance-reports/."
        create => "true",
        copy_from => default:local_dcp( "$(sys.masterdir)/.no-distrib/compliance-report-definitions/"),
        depth_search => default:recurse( "inf" ),
        if => isdir( "$(sys.masterdir)/.no-distrib/compliance-report-definitions/");

      "$(sys.bindir)/compliance-report-definition-importer.sh"
        create => "true",
        perms => default:mog( "700", "root", "root" ),
        edit_template_string => `#!/bin/bash
      {{#vars.$(this.bundle)._all_import_files}}
         $(sys.bindir)/psql -d cfmp -c "UPDATE dashboard_rules
SET export_id=LOWER(REPLACE(name, ' ', '-'))
WHERE export_id IS null AND name IN ('OS is reported', 'Supported CentOS', 'Supported Debian', 'Supported RHEL', 'Supported Ubuntu');"
         /var/cfengine/bin/curl -k https://127.0.0.1/advancedreports/complianceReport/import \
         --user CFE_ROBOT:$(_stuff[cf_robot_password]) \
         -X POST \
         --form 'data=<{{{.}}}' \
         --form 'public=true' \
         --form 'overwrite=true' \
         --form 'source=build module'
         {{/vars.$(this.bundle)._all_import_files}}`,
         template_method => "inline_mustache";

  commands:
   "$(sys.bindir)/compliance-report-definition-importer.sh"
     contain => default:silent,
     inform => "false",
     classes => default:results( "bundle", "compliance_reports_import" );

  reports:
   compliance_reports_import_repaired.(inform_mode|verbose_mode|debug_mode)::
     "Compliance reports imported successfully";
}
bundle agent __main__
{
  methods:
      "compliance_report_imports";
}
